{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/alttpr-ui/alttpr-ui.module.ts","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.html","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.scss","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.ts","webpack:///./src/app/alttpr-ui/images/base/images-service.ts","webpack:///./src/app/alttpr-ui/images/json-images.ts","webpack:///./src/app/alttpr-ui/layout-tile-item/layout-tile-item.component.html","webpack:///./src/app/alttpr-ui/layout-tile-item/layout-tile-item.component.scss","webpack:///./src/app/alttpr-ui/layout-tile-item/layout-tile-item.component.ts","webpack:///./src/app/alttpr-ui/layout-tile-twin/layout-tile-twin.component.html","webpack:///./src/app/alttpr-ui/layout-tile-twin/layout-tile-twin.component.scss","webpack:///./src/app/alttpr-ui/layout-tile-twin/layout-tile-twin.component.ts","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.html","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.scss","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.ts","webpack:///./src/app/alttpr-ui/multiplayer/service/json-multiplayer.ts","webpack:///./src/app/alttpr-ui/multiplayer/service/multiplayer.ts","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.html","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.scss","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.ts","webpack:///./src/app/alttpr-ui/standard/standard.component.html","webpack:///./src/app/alttpr-ui/standard/standard.component.scss","webpack:///./src/app/alttpr-ui/standard/standard.component.ts","webpack:///./src/app/alttpr-ui/timer/timer.component.html","webpack:///./src/app/alttpr-ui/timer/timer.component.scss","webpack:///./src/app/alttpr-ui/timer/timer.component.ts","webpack:///./src/app/alttpr/ALTTPR-config-helper.ts","webpack:///./src/app/alttpr/ids/DungeonEntranceItem.ts","webpack:///./src/app/alttpr/ids/DungeonReward.ts","webpack:///./src/app/alttpr/ids/Utils.ts","webpack:///./src/app/alttpr/tiles/dungeon-tile-parser.ts","webpack:///./src/app/alttpr/tiles/dungeon-tile.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configuration/base/configuration-fetcher.ts","webpack:///./src/app/configuration/json/configuration-json-fetcher.ts","webpack:///./src/app/configuration/json/parsers/activable-tile-parser.ts","webpack:///./src/app/configuration/json/parsers/count-tile-parser.ts","webpack:///./src/app/configuration/json/parsers/select-tile-parser.ts","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.html","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.scss","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.ts","webpack:///./src/app/core-ui/core-ui.module.ts","webpack:///./src/app/core-ui/image-repository/image-repository.ts","webpack:///./src/app/core-ui/layout/fetcher/json-layout.ts","webpack:///./src/app/core-ui/layout/fetcher/layout-fetcher.ts","webpack:///./src/app/core-ui/layout/layout.ts","webpack:///./src/app/core-ui/select-tile/select-tile.component.html","webpack:///./src/app/core-ui/select-tile/select-tile.component.scss","webpack:///./src/app/core-ui/select-tile/select-tile.component.ts","webpack:///./src/app/core/configuration/Configuration.ts","webpack:///./src/app/core/configuration/ConfigurationBuilder.ts","webpack:///./src/app/core/item/Activable.ts","webpack:///./src/app/core/item/Count.ts","webpack:///./src/app/core/item/Select.ts","webpack:///./src/app/core/item/updatable-item.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DungeonTileComponent } from './dungeon-tile/dungeon-tile.component';\r\nimport { StandardComponent } from './standard/standard.component';\r\nimport { CoreUiModule } from '../core-ui/core-ui.module';\r\nimport { ALTTPRConfiguration } from '../alttpr/ALTTPR-configuration';\r\nimport { IConfigurationFetcher } from '../configuration/base/configuration-fetcher';\r\nimport { ConfigurationJsonFetcher } from '../configuration/json/configuration-json-fetcher';\r\nimport { DungeonTileParser } from '../alttpr/tiles/dungeon-tile-parser';\r\nimport { HardcodedImages } from './images/hardcoded-images';\r\nimport { ImagesService } from './images/base/images-service';\r\nimport { JsonImages } from './images/json-images';\r\nimport { ImageRepository } from '../core-ui/image-repository/image-repository';\r\nimport { MultiplayerComponent } from './multiplayer/multiplayer.component';\r\nimport { SingleplayerComponent } from './singleplayer/singleplayer.component';\r\nimport { MultiplayerService } from './multiplayer/service/multiplayer';\r\nimport { HardcodedMultiplayerService } from './multiplayer/service/hardcoded-multiplayer';\r\nimport { JsonMultiplayerService } from './multiplayer/service/json-multiplayer';\r\nimport { ILayoutFetcher } from '../core-ui/layout/fetcher/layout-fetcher';\r\nimport { JsonLayoutFetcher } from '../core-ui/layout/fetcher/json-layout';\r\nimport { TimerComponent } from './timer/timer.component';\r\nimport { LayoutTileItemComponent } from './layout-tile-item/layout-tile-item.component';\r\nimport { LayoutTileTwinComponent } from './layout-tile-twin/layout-tile-twin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimerComponent,\r\n    DungeonTileComponent,\r\n    StandardComponent,\r\n    MultiplayerComponent,\r\n    SingleplayerComponent,\r\n    LayoutTileItemComponent,\r\n    LayoutTileTwinComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CoreUiModule\r\n  ],\r\n  exports: [TimerComponent,\r\n    DungeonTileComponent,\r\n    SingleplayerComponent,\r\n    MultiplayerComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: IConfigurationFetcher,\r\n      useFactory: () => {\r\n        const fetcher = new ConfigurationJsonFetcher('./assets/configuration/example.json');\r\n        fetcher.addParser(new DungeonTileParser());\r\n\r\n        return fetcher;\r\n      }\r\n    },\r\n    {\r\n      provide: ILayoutFetcher,\r\n      useFactory: () => {\r\n        return new JsonLayoutFetcher('./assets/configuration/example.layout.json');\r\n      }\r\n    },\r\n    {\r\n      provide: ImagesService,\r\n      useFactory: (imageRepo: ImageRepository) => {\r\n        return new JsonImages(imageRepo, './assets/configuration/example.images.json');\r\n      },\r\n      deps: [ImageRepository]\r\n    },\r\n    {\r\n      provide: MultiplayerService,\r\n      useFactory: () => {\r\n        return new JsonMultiplayerService('./assets/configuration/example.multiplayer.json');\r\n      }\r\n    },\r\n    // { provide: IConfigurationFetcher, useClass: ALTTPRConfiguration },\r\n    // { provide: ImagesService, useClass: HardcodedImages },\r\n    // { provide: MultiplayerService, useClass: HardcodedMultiplayerService }\r\n  ]\r\n})\r\nexport class AlttprUiModule {\r\n  constructor(imagesService: ImagesService) {\r\n    imagesService.setImagesInRepository();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"imageContainer\\\">\\r\\n  <activable-tile\\r\\n    class=\\\"dungeon\\\"\\r\\n    [item]=\\\"item\\\"></activable-tile>\\r\\n  <select-tile\\r\\n    class=\\\"reward\\\"\\r\\n    [item]=\\\"item.reward\\\"></select-tile>\\r\\n  <select-tile\\r\\n    *ngIf=\\\"item.block\\\"\\r\\n    class=\\\"block\\\"\\r\\n    [item]=\\\"item.block\\\"></select-tile>\\r\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  position: relative; }\\n  .imageContainer .notFound,\\n  .imageContainer .unknown {\\n    -webkit-filter: grayscale(100%);\\n            filter: grayscale(100%); }\\n  .imageContainer .reward {\\n    z-index: 10;\\n    position: absolute;\\n    bottom: 11px;\\n    left: 0;\\n    width: 16px;\\n    height: 16px; }\\n  .imageContainer .block {\\n    z-index: 10;\\n    position: absolute;\\n    bottom: 11px;\\n    right: 0;\\n    width: 16px;\\n    height: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL2R1bmdlb24tdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGFsdHRwci11aVxcZHVuZ2Vvbi10aWxlXFxkdW5nZW9uLXRpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXO0VBQ1gsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixtQkFBa0IsRUF3QnJCO0VBNUJEOztJQVFRLGdDQUF1QjtZQUF2Qix3QkFBdUIsRUFDMUI7RUFUTDtJQVlRLFlBQVc7SUFDWCxtQkFBa0I7SUFDbEIsYUFBWTtJQUNaLFFBQU87SUFDUCxZQUFXO0lBQ1gsYUFBWSxFQUNmO0VBbEJMO0lBcUJRLFlBQVc7SUFDWCxtQkFBa0I7SUFDbEIsYUFBWTtJQUNaLFNBQVE7SUFDUixZQUFXO0lBQ1gsYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvYWx0dHByLXVpL2R1bmdlb24tdGlsZS9kdW5nZW9uLXRpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2VDb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgLm5vdEZvdW5kLFxyXG4gICAgLnVua25vd24ge1xyXG4gICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xyXG4gICAgfVxyXG5cclxuICAgIC5yZXdhcmQge1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDExcHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTZweDtcclxuICAgICAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmJsb2NrIHtcclxuICAgICAgICB6LWluZGV4OiAxMDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAxMXB4O1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgICAgIGhlaWdodDogMTZweDtcclxuICAgIH1cclxufSJdfQ== */\"","import { Component, Input } from '@angular/core';\nimport { DungeonTile } from 'src/app/alttpr/tiles/dungeon-tile';\n\n@Component({\n  selector: 'dungeon-tile',\n  templateUrl: './dungeon-tile.component.html',\n  styleUrls: ['./dungeon-tile.component.scss']\n})\nexport class DungeonTileComponent {\n  @Input()\n  public item: DungeonTile;\n}\n","export abstract class ImagesService {\r\n  public abstract setImagesInRepository(): Promise<void>;\r\n}","import { ImageRepository } from 'src/app/core-ui/image-repository/image-repository';\r\nimport { Injectable } from '@angular/core';\r\nimport { ImagesService } from './base/images-service';\r\n\r\n@Injectable()\r\nexport class JsonImages implements ImagesService {\r\n  private _imageRepo: ImageRepository;\r\n  private _filename: string;\r\n  private _preloadedImagesCache: Array<HTMLImageElement> = [];\r\n\r\n  constructor(imageRepo: ImageRepository, filename: string) {\r\n    this._imageRepo = imageRepo;\r\n    this._filename = filename;\r\n  }\r\n\r\n  public async setImagesInRepository(): Promise<void> {\r\n    const images: { [key: string]: string } = await (await fetch(this._filename)).json();\r\n    this._preloadedImagesCache = [];\r\n\r\n    Object.keys(images).forEach(id => {\r\n      this._preloadImage(images[id]);\r\n      this._imageRepo.addImage(id, images[id]);\r\n    });\r\n  }\r\n\r\n  private _preloadImage(url: string): void {\r\n    const img: HTMLImageElement = new Image();\r\n    img.src = url;\r\n    this._preloadedImagesCache.push(img);\r\n  }\r\n}","module.exports = \"<ng-container\\r\\n  [ngSwitch]=\\\"item.type\\\">\\r\\n  <activable-tile\\r\\n    *ngSwitchCase=\\\"'Activable'\\\"\\r\\n    class=\\\"item\\\"\\r\\n    [item]=\\\"item\\\"></activable-tile>\\r\\n  <select-tile\\r\\n    *ngSwitchCase=\\\"'Select'\\\"\\r\\n    class=\\\"item\\\"\\r\\n    [item]=\\\"item\\\"></select-tile>\\r\\n  <dungeon-tile\\r\\n    *ngSwitchCase=\\\"'Dungeon'\\\"\\r\\n    class=\\\"item\\\"\\r\\n    [item]=\\\"item\\\"></dungeon-tile>\\r\\n</ng-container>\"","module.exports = \".item {\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL2xheW91dC10aWxlLWl0ZW0vRDpcXFByb2plY3RzXFxUcmFja2VyQUxUVFBSL3NyY1xcYXBwXFxhbHR0cHItdWlcXGxheW91dC10aWxlLWl0ZW1cXGxheW91dC10aWxlLWl0ZW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFjLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvYWx0dHByLXVpL2xheW91dC10aWxlLWl0ZW0vbGF5b3V0LXRpbGUtaXRlbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IItem } from 'src/app/core/item/Item';\r\n\r\n@Component({\r\n  selector: 'layout-tile-item',\r\n  templateUrl: './layout-tile-item.component.html',\r\n  styleUrls: ['./layout-tile-item.component.scss']\r\n})\r\nexport class LayoutTileItemComponent {\r\n  @Input()\r\n  public item: IItem;\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"subtile-container left\\\">\\r\\n    <layout-tile-item class=\\\"subtile\\\" [item]=\\\"items[0]\\\"></layout-tile-item>\\r\\n  </div>\\r\\n  <div class=\\\"subtile-container right\\\">\\r\\n    <layout-tile-item class=\\\"subtile\\\" [item]=\\\"items[1]\\\"></layout-tile-item>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".container {\\n  display: flex; }\\n  .container .subtile {\\n    position: absolute;\\n    width: 32px;\\n    height: 32px;\\n    max-width: 32px;\\n    max-height: 32px;\\n    overflow: hidden;\\n    display: block;\\n    top: -100%;\\n    bottom: -100%;\\n    left: -100%;\\n    right: -100%;\\n    margin: auto; }\\n  .container .subtile-container {\\n    position: relative;\\n    width: 16px;\\n    height: 32px;\\n    max-width: 16px;\\n    max-height: 32px;\\n    overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL2xheW91dC10aWxlLXR3aW4vRDpcXFByb2plY3RzXFxUcmFja2VyQUxUVFBSL3NyY1xcYXBwXFxhbHR0cHItdWlcXGxheW91dC10aWxlLXR3aW5cXGxheW91dC10aWxlLXR3aW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxjQUFhLEVBaUNoQjtFQWxDRDtJQUlRLG1CQUFrQjtJQUNsQixZQVJJO0lBU0osYUFSSztJQVNMLGdCQVZJO0lBV0osaUJBVks7SUFXTCxpQkFBZ0I7SUFDaEIsZUFBYztJQUNkLFdBQVU7SUFDVixjQUFhO0lBQ2IsWUFBVztJQUNYLGFBQVk7SUFDWixhQUFZLEVBQ2Y7RUFoQkw7SUFtQlEsbUJBQWtCO0lBQ2xCLFlBQWlCO0lBQ2pCLGFBdkJLO0lBd0JMLGdCQUFxQjtJQUNyQixpQkF6Qks7SUEwQkwsaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvYWx0dHByLXVpL2xheW91dC10aWxlLXR3aW4vbGF5b3V0LXRpbGUtdHdpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiR3aWR0aDogMzJweDtcclxuJGhlaWdodDogMzJweDtcclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAuc3VidGlsZSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAkd2lkdGg7XHJcbiAgICAgICAgaGVpZ2h0OiAkaGVpZ2h0O1xyXG4gICAgICAgIG1heC13aWR0aDogJHdpZHRoO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB0b3A6IC0xMDAlO1xyXG4gICAgICAgIGJvdHRvbTogLTEwMCU7XHJcbiAgICAgICAgbGVmdDogLTEwMCU7XHJcbiAgICAgICAgcmlnaHQ6IC0xMDAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuXHJcbiAgICAuc3VidGlsZS1jb250YWluZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogJHdpZHRoIC8gMjtcclxuICAgICAgICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd2lkdGggLyAyO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIH1cclxuXHJcbiAgICAubGVmdCB7XHJcbiAgICAgICAgLy8gbGVmdDogLTE2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnJpZ2h0IHtcclxuICAgICAgICAvLyBsZWZ0OiAxNnB4O1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IItem } from 'src/app/core/item/Item';\r\n\r\n@Component({\r\n  selector: 'layout-tile-twin',\r\n  templateUrl: './layout-tile-twin.component.html',\r\n  styleUrls: ['./layout-tile-twin.component.scss']\r\n})\r\nexport class LayoutTileTwinComponent {\r\n  @Input()\r\n  public items: [IItem, IItem];\r\n}\r\n","module.exports = \"<standard [config]=\\\"config1\\\"></standard>\\n<p>----------</p>\\n<standard [config]=\\\"config2\\\"></standard>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsdHRwci11aS9tdWx0aXBsYXllci9tdWx0aXBsYXllci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\nimport { DungeonReward } from 'src/app/alttpr/ids/DungeonReward';\nimport { Dungeon } from 'src/app/alttpr/ids/Dungeon';\nimport { DungeonTile } from 'src/app/alttpr/tiles/dungeon-tile';\nimport { Utils } from 'src/app/alttpr/ids/Utils';\nimport { Select } from 'src/app/core/item/Select';\nimport { MultiplayerService } from './service/multiplayer';\nimport { Activable } from 'src/app/core/item/Activable';\nimport { IItem } from 'src/app/core/item/Item';\n\ninterface Type<T> extends Function {\n  new (...args: any[]): T\n}\n\n@Component({\n  selector: 'multiplayer',\n  templateUrl: './multiplayer.component.html',\n  styleUrls: ['./multiplayer.component.scss']\n})\nexport class MultiplayerComponent {\n  public config1: IConfiguration;\n  public config2: IConfiguration;\n\n  private _configRepository: IConfigurationFetcher;\n  private _multiplayerService: MultiplayerService;\n\n  constructor(configuration: IConfigurationFetcher, multiplayerService: MultiplayerService) {\n    this._configRepository = configuration;\n    this._multiplayerService = multiplayerService;\n  }\n\n  public async ngOnInit() {\n    this.config1 = await this._configRepository.getConfig();\n    this.config2 = await this._configRepository.getConfig();\n\n    const commonSelects: Array<string> = await this._multiplayerService.getAllCommonSelects();\n    this._connectItemCategory(Select, \"Select\", commonSelects, MultiplayerComponent._setSelectState);\n\n    const commonActivables: Array<string> = await this._multiplayerService.getAllCommonActivables();\n    this._connectItemCategory(Activable, \"Activable\", commonActivables, MultiplayerComponent._setActivableState);\n  }\n\n  private _connectItemCategory<TItem extends IItem>(\n    category: Type<TItem>,\n    categoryName: string,\n    commons: Array<string>,\n    setFn: (source: TItem, target: TItem) => void\n  ): void {\n    commons.forEach(commonState => {\n      const itemConfig1 = this.config1.getItem(commonState);\n      const itemConfig2 = this.config2.getItem(commonState);\n\n      if (!(itemConfig1 instanceof category) || !(itemConfig2 instanceof category)) {\n        throw new Error(`${commonState} needs to be a ${categoryName} item`);\n      }\n\n      this._connectItems(itemConfig1, itemConfig2, setFn);\n    });\n  }\n\n  private _connectItems<TItem extends IItem>(item1: TItem, item2: TItem, setFn: (source: TItem, target: TItem) => void) {\n    item1.onUpdate.subscribe((source: TItem) => {\n      setFn(source, item2);\n    });\n\n    item2.onUpdate.subscribe((source: TItem) => {\n      setFn(source, item1);\n    });\n  }\n\n  private static _setSelectState(source: Select, target: Select): void {\n    target.state = source.state;\n  }\n\n  private static _setActivableState(source: Activable, target: Activable): void {\n    target.setActive(source.isActive);\n  }\n}\n","import { MultiplayerService } from './multiplayer';\r\n\r\ninterface MultiplayerSharedItems {\r\n  select: Array<string>;\r\n  activable: Array<string>;\r\n}\r\n\r\nexport class JsonMultiplayerService implements MultiplayerService {\r\n  private _filename: string;\r\n  private _sharedItems: MultiplayerSharedItems;\r\n\r\n  constructor(filename: string) {\r\n    this._filename = filename;\r\n  }\r\n\r\n  public async getAllCommonSelects(): Promise<Array<string>> {\r\n    const sharedItems: MultiplayerSharedItems = await this._fetchSharedItems();\r\n    return sharedItems.select || [];\r\n  }\r\n\r\n  public async getAllCommonActivables(): Promise<Array<string>> {\r\n    const sharedItems: MultiplayerSharedItems = await this._fetchSharedItems();\r\n    return sharedItems.activable || [];\r\n  }\r\n\r\n  private async _fetchSharedItems(): Promise<MultiplayerSharedItems> {\r\n    if (!this._sharedItems)\r\n      this._sharedItems = await (await fetch(this._filename)).json();\r\n    \r\n    return this._sharedItems;\r\n  }\r\n}","export abstract class MultiplayerService {\r\n  public abstract getAllCommonSelects(): Promise<Array<string>>;\r\n  public abstract getAllCommonActivables(): Promise<Array<string>>;\r\n}","module.exports = \"<standard *ngIf=\\\"config\\\" [config]=\\\"config\\\"></standard>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsdHRwci11aS9zaW5nbGVwbGF5ZXIvc2luZ2xlcGxheWVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\r\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\r\n\r\n@Component({\r\n  selector: 'singleplayer',\r\n  templateUrl: './singleplayer.component.html',\r\n  styleUrls: ['./singleplayer.component.scss']\r\n})\r\nexport class SingleplayerComponent implements OnInit {\r\n  public config: IConfiguration;\r\n\r\n  @HostListener('window:keyup.r')\r\n  public async getNewConfig(): Promise<void> {\r\n    this.config = await this._configRepository.getConfig();\r\n  }\r\n\r\n  private _configRepository: IConfigurationFetcher;\r\n\r\n  constructor(configuration: IConfigurationFetcher) {\r\n    this._configRepository = configuration;\r\n  }\r\n\r\n  public async ngOnInit() {\r\n    this.getNewConfig();\r\n  }\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"isReady\\\">\\r\\n  <ng-container\\r\\n    *ngFor=\\\"let tile of tiles\\\"\\r\\n    [ngSwitch]=\\\"tile.type\\\">\\r\\n    <layout-tile-item\\r\\n      *ngSwitchCase=\\\"TileType.Item\\\"\\r\\n      class=\\\"tile\\\"\\r\\n      [item]=\\\"tile.item\\\"></layout-tile-item>\\r\\n    <layout-tile-twin\\r\\n      *ngSwitchCase=\\\"TileType.Twin\\\"\\r\\n      class=\\\"tile\\\"\\r\\n      [items]=\\\"tile.items\\\"></layout-tile-twin>\\r\\n  </ng-container>\\r\\n</ng-container>\"","module.exports = \":host {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.tile {\\n  width: 32px;\\n  height: 32px;\\n  max-width: 32px;\\n  max-height: 32px;\\n  overflow: hidden;\\n  margin: 1px;\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL3N0YW5kYXJkL0Q6XFxQcm9qZWN0c1xcVHJhY2tlckFMVFRQUi9zcmNcXGFwcFxcYWx0dHByLXVpXFxzdGFuZGFyZFxcc3RhbmRhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsZ0JBQWUsRUFDbEI7O0FBRUQ7RUFDSSxZQUFXO0VBQ1gsYUFBWTtFQUNaLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixZQUFXO0VBQ1gsZUFBYyxFQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FsdHRwci11aS9zdGFuZGFyZC9zdGFuZGFyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi50aWxlIHtcclxuICAgIHdpZHRoOiAzMnB4O1xyXG4gICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMnB4O1xyXG4gICAgbWF4LWhlaWdodDogMzJweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBtYXJnaW46IDFweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59Il19 */\"","import { Component, Input } from '@angular/core';\r\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\r\nimport { Item } from 'src/app/alttpr/ids/Item';\r\nimport { Dungeon } from 'src/app/alttpr/ids/Dungeon';\r\nimport { SwordState } from 'src/app/alttpr/ids/SwordState';\r\nimport { Utils } from 'src/app/alttpr/ids/Utils';\r\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\r\nimport { ILayoutFetcher } from 'src/app/core-ui/layout/fetcher/layout-fetcher';\r\nimport { ILayout, TileId, TileType, ITile, ILayoutTileRaw, IItemTile, ITwinTile } from 'src/app/core-ui/layout/layout';\r\nimport { IItem } from 'src/app/core/item/Item';\r\nimport { isObject } from 'util';\r\n\r\nexport interface ILayoutItemTile {\r\n  item: IItem;\r\n  type: TileType.Item;\r\n}\r\n\r\nexport interface ILayoutTwinTile {\r\n  items: [IItem, IItem];\r\n  type: TileType.Twin;\r\n}\r\n\r\ntype ILayoutTile = ILayoutItemTile | ILayoutTwinTile;\r\n\r\n@Component({\r\n  selector: 'standard',\r\n  templateUrl: './standard.component.html',\r\n  styleUrls: ['./standard.component.scss']\r\n})\r\nexport class StandardComponent {\r\n  @Input()\r\n  public config: IConfiguration;\r\n\r\n  public tiles: Array<ILayoutTile>;\r\n  public isReady: boolean = false;\r\n  public TileType: typeof TileType = TileType;\r\n\r\n  private _layout: ILayout;\r\n  private _layoutFetcher: ILayoutFetcher;\r\n\r\n  constructor(layoutFetcher: ILayoutFetcher) {\r\n    this._layoutFetcher = layoutFetcher;\r\n  }\r\n\r\n  public async ngOnChanges() {\r\n    this._layout = await this._layoutFetcher.getLayout();\r\n\r\n    this.tiles = [];\r\n    this._layout.tilesOrder.forEach((tileConfig: ILayoutTileRaw) => {\r\n      if (this._isConfig(tileConfig)) {\r\n        this.tiles.push(this._rawToTile(tileConfig));\r\n      } else {\r\n        this.tiles.push({\r\n          item: this.config.getItem(tileConfig),\r\n          type: TileType.Item\r\n        });\r\n      }\r\n    });\r\n\r\n    this.isReady = true;\r\n  }\r\n\r\n  private _isConfig(tileConfig: TileId | ITile): tileConfig is ITile {\r\n    return isObject(tileConfig);\r\n  }\r\n\r\n  private _rawToTile(tile: ITile): ILayoutTile {\r\n    switch(tile.type) {\r\n      case TileType.Item:\r\n        return {\r\n          item: this.config.getItem(tile.item),\r\n          type: TileType.Item\r\n        };\r\n      case TileType.Twin:\r\n        return {\r\n          items: tile.items.map(x => this.config.getItem(x)) as [IItem, IItem],\r\n          type: TileType.Twin\r\n        };\r\n    }\r\n  }\r\n}","module.exports = \"<div>{{ display }}</div>\"","module.exports = \"@font-face {\\n  font-family: digital;\\n  src: url(digital2.ttf); }\\n\\n:host {\\n  display: block;\\n  margin-bottom: 5px;\\n  font-family: digital;\\n  text-align: center;\\n  font-size: 32px;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL3RpbWVyL0Q6XFxQcm9qZWN0c1xcVHJhY2tlckFMVFRQUi9zcmNcXGFwcFxcYWx0dHByLXVpXFx0aW1lclxcdGltZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBb0I7RUFDcEIsdUJBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksZUFBYztFQUNkLG1CQUFrQjtFQUNsQixxQkFBb0I7RUFDcEIsbUJBQWtCO0VBQ2xCLGdCQUFlO0VBQ2YsYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvYWx0dHByLXVpL3RpbWVyL3RpbWVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogZGlnaXRhbDtcclxuICAgIHNyYzogdXJsKGRpZ2l0YWwyLnR0Zik7XHJcbn1cclxuXHJcbjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgZm9udC1mYW1pbHk6IGRpZ2l0YWw7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.scss']\r\n})\r\nexport class TimerComponent implements OnInit {\r\n  private running: boolean;\r\n  private display: string;\r\n  private results: any;\r\n  private times: Array<number>;\r\n  private time: number;\r\n\r\n  public async ngOnInit() {\r\n  }\r\n\r\n  constructor() {\r\n    this.running = false;\r\n    this.times = [];\r\n    this.reset();\r\n    this.print();\r\n  }\r\n\r\n  @HostListener('window:keyup.r')\r\n  reset() {\r\n    this.times = [0, 0, 0, 0];\r\n    this.print();\r\n  }\r\n  \r\n  @HostListener('window:keyup.q')\r\n  public action() {\r\n    if (this.time) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (!this.time) this.time = performance.now();\r\n    if (!this.running) {\r\n      this.running = true;\r\n      requestAnimationFrame(this.step.bind(this));\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n    this.time = null;\r\n  }\r\n\r\n  restart() {\r\n    if (!this.time) this.time = performance.now();\r\n    if (!this.running) {\r\n      this.running = true;\r\n      requestAnimationFrame(this.step.bind(this));\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  step(timestamp) {\r\n    if (!this.running) return;\r\n    this.calculate(timestamp);\r\n    this.time = timestamp;\r\n    this.print();\r\n    requestAnimationFrame(this.step.bind(this));\r\n  }\r\n\r\n  calculate(timestamp) {\r\n    var diff = timestamp - this.time;\r\n    // Hundredths of a second are 100 ms\r\n    this.times[3] += diff / 10;\r\n    // Seconds are 100 hundredths of a second\r\n    if (this.times[3] >= 100) {\r\n      this.times[2] += 1;\r\n      this.times[3] -= 100;\r\n    }\r\n    // Minutes are 60 seconds\r\n    if (this.times[2] >= 60) {\r\n      this.times[1] += 1;\r\n      this.times[2] -= 60;\r\n    }\r\n    // Hours are 60 minutes\r\n    if (this.times[1] >= 60) {\r\n      this.times[0] += 1;\r\n      this.times[1] -= 60;\r\n    }\r\n  }\r\n\r\n  print() {\r\n    this.display = this.format(this.times);\r\n  }\r\n\r\n  format(times: Array<number>) {\r\n    return `${this.pad0(times[0], 2)}:${this.pad0(times[1], 2)}:${this.pad0(times[2], 2)}:${this.pad0(Math.floor(times[3]), 2)}`;\r\n  }\r\n\r\n  private pad0(value: number, count: number) {\r\n    var result = value.toString();\r\n    for (; result.length < count; --count)\r\n      result = '0' + result;\r\n    return result;\r\n  }\r\n}\r\n","import { Select } from '../core/item/Select';\r\nimport { Utils } from './ids/Utils';\r\nimport { DungeonReward } from './ids/DungeonReward';\r\nimport { Dungeon } from './ids/Dungeon';\r\nimport { DungeonEntranceItem } from './ids/DungeonEntranceItem';\r\n\r\nexport class ALTTPConfigHelper {\r\n    public static createDungeonRewardSelect(dungeonId: Dungeon): Select {\r\n        return new Select(Utils.dungeonRewardId(dungeonId), [\r\n            DungeonReward.Unknown,\r\n            DungeonReward.Crystal,\r\n            DungeonReward.RedCrystal,\r\n            DungeonReward.Pendant,\r\n            DungeonReward.GreenPendant\r\n        ]);\r\n    }\r\n\r\n    public static createDungeonBlockSelect(dungeonId: Dungeon): Select {\r\n        return new Select(Utils.dungeonNeededItemId(dungeonId), [\r\n            DungeonEntranceItem.Unknown,\r\n            DungeonEntranceItem.Bombos,\r\n            DungeonEntranceItem.Ether,\r\n            DungeonEntranceItem.Quake\r\n        ]);\r\n    }\r\n}","export enum DungeonEntranceItem {\r\n    Unknown = 'DungeonEntranceItem_?',\r\n    Bombos = 'DungeonEntranceItem_Bombos',\r\n    Ether = 'DungeonEntranceItem_Ether',\r\n    Quake = 'DungeonEntranceItem_Quake'\r\n}\r\n","export enum DungeonReward {\r\n    Unknown = 'DungeonReward_?',\r\n    Pendant = 'DungeonReward_Pendant',\r\n    GreenPendant = 'DungeonReward_GreenPendant',\r\n    Crystal = 'DungeonReward_Crystal',\r\n    RedCrystal = 'DungeonReward_RedCrystal'\r\n}\r\n","import { Dungeon } from './Dungeon';\r\n\r\nexport class Utils {\r\n    public static dungeonRewardId(dungeon: Dungeon): string {\r\n        return `${dungeon}_Reward`;\r\n    }\r\n    \r\n    public static dungeonNeededItemId(dungeon: Dungeon): string {\r\n        return `${dungeon}_EntranceNeededItem`;\r\n    }\r\n}","import { ITileParser } from \"../../configuration/json/parsers/base/tile-parser\";\r\nimport { IItem } from '../../core/item/Item';\r\nimport { Activable } from '../../core/item/Activable';\r\nimport { Select } from '../../core/item/Select';\r\nimport { DungeonTile } from './dungeon-tile';\r\nimport { Dungeon } from '../ids/Dungeon';\r\n\r\nexport class DungeonTileParser implements ITileParser {\r\n    public type: string = 'Dungeon';\r\n\r\n    public parse(config: { id: Dungeon; blocked: boolean; }): Array<IItem> {\r\n        const dungeonTile: DungeonTile = new DungeonTile(config.id);\r\n        const parsedItems: Array<IItem> = [dungeonTile, dungeonTile.reward];\r\n        \r\n        if (config.blocked){\r\n            dungeonTile.setBlocked();\r\n            parsedItems.push(dungeonTile.block);\r\n        }\r\n\r\n        return parsedItems;\r\n    }\r\n}","import { Activable } from 'src/app/core/item/Activable';\r\nimport { Select } from 'src/app/core/item/Select';\r\nimport { ALTTPConfigHelper } from '../ALTTPR-config-helper';\r\nimport { Dungeon } from '../ids/Dungeon';\r\n\r\nexport class DungeonTile extends Activable {\r\n    public type: string = 'Dungeon';\r\n    public reward: Select;\r\n    public block?: Select;\r\n\r\n    constructor(id: Dungeon) {\r\n        super(id);\r\n        this.reward = ALTTPConfigHelper.createDungeonRewardSelect(id);\r\n        this.reward.onUpdate.subscribe(() => this._emitChange());\r\n    }\r\n\r\n    public setBlocked(): void {\r\n        this.block = ALTTPConfigHelper.createDungeonBlockSelect(this.id as Dungeon);\r\n        this.block.onUpdate.subscribe(() => this._emitChange());\r\n    }\r\n}","module.exports = \"<timer></timer>\\r\\n<singleplayer></singleplayer>\"","module.exports = \":host {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n  :host.darkmode {\\n    background-color: gray; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXFByb2plY3RzXFxUcmFja2VyQUxUVFBSL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFjO0VBQ2QsbUJBQWtCO0VBQ2xCLE9BQU07RUFDTixRQUFPO0VBQ1AsU0FBUTtFQUNSLFVBQVMsRUFLVjtFQVhEO0lBU0ksdUJBQXNCLEVBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcblxyXG4gICYuZGFya21vZGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICB9XHJcbn0iXX0= */\"","import { Component, HostBinding, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @HostBinding('class.darkmode')\n  public darkmode: boolean = false;\n\n  @HostListener('window:keyup.d')\n  public toggleDarkMode() {\n    this.darkmode = !this.darkmode;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AlttprUiModule } from './alttpr-ui/alttpr-ui.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AlttprUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { IConfiguration } from '../../core/configuration/base/Configuration';\r\n\r\nexport abstract class IConfigurationFetcher {\r\n    public abstract getConfig(): Promise<IConfiguration>;\r\n}","import { IConfigurationFetcher } from '../base/configuration-fetcher';\r\nimport { IConfiguration } from '../../core/configuration/base/Configuration';\r\nimport { ConfigurationBuilder } from '../../core/configuration/ConfigurationBuilder';\r\nimport { ITileParser } from './parsers/base/tile-parser';\r\nimport { ActivableTileParser } from './parsers/activable-tile-parser';\r\nimport { SelectTileParser } from './parsers/select-tile-parser';\r\nimport { CountTileParser } from './parsers/count-tile-parser';\r\n\r\nexport class ConfigurationJsonFetcher implements IConfigurationFetcher {\r\n    private _filename: string;\r\n    private _parsersMap: { [key: string]: ITileParser } = {\r\n        Activable: new ActivableTileParser(),\r\n        Count: new CountTileParser(),\r\n        Select: new SelectTileParser()\r\n    }\r\n\r\n    constructor(filename: string) {\r\n        this._filename = filename;\r\n    }\r\n\r\n    public addParser(parser: ITileParser): void {\r\n        this._parsersMap[parser.type] = parser;\r\n    }\r\n\r\n    public async getConfig(): Promise<IConfiguration> {\r\n        const json: { tiles: Array<any>; } = await (await fetch(this._filename)).json();\r\n        const builder = new ConfigurationBuilder();\r\n        \r\n        json.tiles.forEach((item) => {\r\n            const parser: ITileParser = this._findParserFor(item.type);\r\n            builder.addItems(parser.parse(item));\r\n        });\r\n\r\n        return builder.build();\r\n    }\r\n\r\n    private _findParserFor(type: string): ITileParser {\r\n        if (!this._parsersMap[type])\r\n            throw new Error(`Parser not found for tile type ${type}`);\r\n\r\n        return this._parsersMap[type];\r\n    }\r\n}\r\n","import { Activable } from '../../../core/item/Activable';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class ActivableTileParser implements ITileParser {\r\n    public type: string = 'Activable';\r\n    public parse(config: {\r\n        id: string;\r\n    }): Array<Activable> {\r\n        return [new Activable(config.id)];\r\n    }\r\n}\r\n","import { Count } from '../../../core/item/Count';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class CountTileParser implements ITileParser {\r\n    public type: string = 'Count';\r\n    public parse(config: {\r\n        id: string;\r\n        from: number;\r\n        to: number;\r\n    }): Array<Count> {\r\n        return [new Count(config.id, config.from, config.to)];\r\n    }\r\n}\r\n","import { Select } from '../../../core/item/Select';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class SelectTileParser implements ITileParser {\r\n    public type: string = 'Select';\r\n    public parse(config: {\r\n        id: string;\r\n        states: Array<string>;\r\n        initialState: string;\r\n    }): Array<Select> {\r\n        const tile = new Select(config.id, config.states);\r\n        if (config.initialState) {\r\n            tile.state = config.initialState;\r\n        }\r\n\r\n        return [tile];\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"imageContainer\\\" (click)=\\\"item.toggle()\\\" (contextmenu)=\\\"item.toggle(); $event.preventDefault()\\\">\\r\\n    <img [ngClass]=\\\"{ 'notFound': !(state$ | async) }\\\" [src]=\\\"image\\\">\\r\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%; }\\n  .imageContainer img {\\n    width: 100%;\\n    height: 100%;\\n    -ms-interpolation-mode: nearest-neighbor;\\n        image-rendering: pixelated;\\n    image-rendering: -moz-crisp-edges;\\n    image-rendering: crisp-edges; }\\n  .imageContainer .notFound {\\n    -webkit-filter: brightness(50%) grayscale(100%);\\n            filter: brightness(50%) grayscale(100%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS11aS9hY3RpdmFibGUtdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGNvcmUtdWlcXGFjdGl2YWJsZS10aWxlXFxhY3RpdmFibGUtdGlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVc7RUFDWCxhQUFZLEVBYWY7RUFmRDtJQUtRLFlBQVc7SUFDWCxhQUFZO0lBQ1oseUNBQTBCO1FBQTFCLDJCQUEwQjtJQUMxQixrQ0FBaUM7SUFDakMsNkJBQTRCLEVBQy9CO0VBVkw7SUFhUSxnREFBdUM7WUFBdkMsd0NBQXVDLEVBQzFDIiwiZmlsZSI6InNyYy9hcHAvY29yZS11aS9hY3RpdmFibGUtdGlsZS9hY3RpdmFibGUtdGlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWFnZUNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBpbWFnZS1yZW5kZXJpbmc6IHBpeGVsYXRlZDtcclxuICAgICAgICBpbWFnZS1yZW5kZXJpbmc6IC1tb3otY3Jpc3AtZWRnZXM7XHJcbiAgICAgICAgaW1hZ2UtcmVuZGVyaW5nOiBjcmlzcC1lZGdlcztcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5vdEZvdW5kIHtcclxuICAgICAgICBmaWx0ZXI6IGJyaWdodG5lc3MoNTAlKSBncmF5c2NhbGUoMTAwJSk7XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Activable } from 'src/app/core/item/Activable';\r\nimport { ImageRepository } from '../image-repository/image-repository';\r\nimport { Observable, of, concat } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'activable-tile',\r\n  templateUrl: './activable-tile.component.html',\r\n  styleUrls: ['./activable-tile.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActivableTileComponent {\r\n  @Input()\r\n  public item: Activable;\r\n  \r\n  public image: string;\r\n  public state$: Observable<boolean>;\r\n\r\n  private _imageRepo: ImageRepository;\r\n\r\n  constructor(imageRepo: ImageRepository) {\r\n    this._imageRepo = imageRepo;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.image = this._imageRepo.getImageForId(this.item.id);\r\n    this.state$ = concat(\r\n      of(this.item.isActive),\r\n      this.item.onUpdate.pipe(map(item => item.isActive))\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivableTileComponent } from './activable-tile/activable-tile.component';\nimport { SelectTileComponent } from './select-tile/select-tile.component';\nimport { ImageRepository } from './image-repository/image-repository';\n\n@NgModule({\n  declarations: [ActivableTileComponent, SelectTileComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ActivableTileComponent, SelectTileComponent],\n  providers: [ImageRepository]\n})\nexport class CoreUiModule { }\n","export class ImageRepository {\r\n  private _imagesMap: { [key: string]: string } = {};\r\n\r\n  public addImage(id: string, url: string): void {\r\n    this._imagesMap[id] = url;\r\n  }\r\n\r\n  public addImages(images: { [key: string]: string }): void {\r\n    Object.assign(this._imagesMap, images);\r\n  }\r\n\r\n  public getImageForId(id: string): string {\r\n    if (!this._imagesMap[id])\r\n      console.warn(\"Image not found for id\", id);\r\n\r\n    return this._imagesMap[id];\r\n  }\r\n}","import { ILayoutFetcher } from './layout-fetcher';\r\nimport { ILayout } from '../layout';\r\n\r\ninterface ILayoutJson {\r\n    tiles: Array<string>;\r\n}\r\n\r\nexport class JsonLayoutFetcher implements ILayoutFetcher {\r\n    private _jsonPath: string;\r\n\r\n    constructor(jsonPath: string) {\r\n        this._jsonPath = jsonPath;\r\n    }\r\n\r\n    public async getLayout(): Promise<ILayout> {\r\n        const layoutJson: ILayoutJson = await (await fetch(this._jsonPath)).json();\r\n\r\n        const layout: ILayout = {\r\n            tilesOrder: layoutJson.tiles\r\n        };\r\n\r\n        return layout;\r\n    }\r\n}","import { ILayout } from '../layout';\r\n\r\nexport abstract class ILayoutFetcher {\r\n    abstract getLayout(): Promise<ILayout>;\r\n}","export type TileId = string;\r\n\r\nexport enum TileType {\r\n\tItem = 'Item',\r\n\tTwin = 'Twin'\r\n}\r\n\r\nexport interface IItemTile {\r\n  item: TileId;\r\n  type: TileType.Item;\r\n}\r\n\r\nexport interface ITwinTile {\r\n  items: [TileId, TileId];\r\n  type: TileType.Twin;\r\n}\r\n\r\nexport type ITile = IItemTile | ITwinTile;\r\n\r\nexport type ILayoutTileRaw = TileId | ITile;\r\n\r\nexport interface ILayout {\r\n\ttilesOrder: Array<ILayoutTileRaw>;\r\n}\r\n","module.exports = \"<div class=\\\"imageContainer\\\" (click)=\\\"next()\\\" (contextmenu)=\\\"previous(); $event.preventDefault()\\\">\\n    <ng-container *ngIf=\\\"state$ | async; let state\\\">\\n        <img [ngClass]=\\\"{ 'notFound': !isFound(state) }\\\" [src]=\\\"images[state]\\\">\\n    </ng-container>\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%;\\n  text-align: center; }\\n  .imageContainer img {\\n    width: 100%;\\n    height: 100%;\\n    -ms-interpolation-mode: nearest-neighbor;\\n        image-rendering: pixelated;\\n    image-rendering: -moz-crisp-edges;\\n    image-rendering: crisp-edges; }\\n  .imageContainer .notFound {\\n    -webkit-filter: brightness(50%) grayscale(100%);\\n            filter: brightness(50%) grayscale(100%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS11aS9zZWxlY3QtdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGNvcmUtdWlcXHNlbGVjdC10aWxlXFxzZWxlY3QtdGlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVc7RUFDWCxhQUFZO0VBQ1osbUJBQWtCLEVBYXJCO0VBaEJEO0lBTVEsWUFBVztJQUNYLGFBQVk7SUFDWix5Q0FBMEI7UUFBMUIsMkJBQTBCO0lBQzFCLGtDQUFpQztJQUNqQyw2QkFBNEIsRUFDL0I7RUFYTDtJQWNRLGdEQUF1QztZQUF2Qyx3Q0FBdUMsRUFDMUMiLCJmaWxlIjoic3JjL2FwcC9jb3JlLXVpL3NlbGVjdC10aWxlL3NlbGVjdC10aWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltYWdlQ29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIGltYWdlLXJlbmRlcmluZzogcGl4ZWxhdGVkO1xyXG4gICAgICAgIGltYWdlLXJlbmRlcmluZzogLW1vei1jcmlzcC1lZGdlcztcclxuICAgICAgICBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzO1xyXG4gICAgfVxyXG5cclxuICAgIC5ub3RGb3VuZCB7XHJcbiAgICAgICAgZmlsdGVyOiBicmlnaHRuZXNzKDUwJSkgZ3JheXNjYWxlKDEwMCUpO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Select } from 'src/app/core/item/Select';\nimport { ImageRepository } from '../image-repository/image-repository';\nimport { concat, of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'select-tile',\n  templateUrl: './select-tile.component.html',\n  styleUrls: ['./select-tile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectTileComponent {\n  @Input()\n  public item: Select;\n  \n  public images: { [id: string]: string };\n  public state$: Observable<unknown>;\n\n  private _imageRepo: ImageRepository;\n\n  constructor(imageRepo: ImageRepository) {\n    this._imageRepo = imageRepo;\n  }\n\n  public ngOnInit(): void {\n    this.images = this._getStatesImages();\n    this.state$ = concat(\n      of(this.item.state),\n      this.item.onUpdate.pipe(map(item => item.state))\n    );\n  }\n\n  private _getStatesImages(): { [id: string]: string } {\n    return this.item.states.reduce<{ [id: string]: string }>((tot, state: string) => {\n      tot[state] = this._imageRepo.getImageForId(state);\n      return tot;\n    }, {});\n  }\n\n  public isFound(state: string): boolean {\n    return this.item.states[0] !== state;\n  }\n\n  public next(): void {\n    const index: number = this.item.states.indexOf(this.item.state);\n    const length: number = this.item.states.length;\n\n    this.item.state = this.item.states[Math.min((index + 1), length - 1)];\n  }\n\n  public previous(): void {\n    const index: number = this.item.states.indexOf(this.item.state);\n\n    this.item.state = this.item.states[Math.max((index - 1), 0)];\n  }\n}\n","import { IItem } from '../item/item';\r\nimport { IConfiguration } from './base/Configuration';\r\n\r\nexport class Configuration implements IConfiguration {\r\n    public items: Array<IItem>;\r\n    public getItem(id: string): IItem {\r\n        const item: IItem = this.items.find(item => item.id === id);\r\n        if (!item) {\r\n            throw new Error(\"Configuration item not found with id \" + id);\r\n        }\r\n        return item;\r\n    }\r\n    public setItem(itemToSet: IItem): void {\r\n        const index: number = this.items.findIndex(item => item.id === itemToSet.id);\r\n        if (index > -1) {\r\n            this.items.splice(index, 1, itemToSet);\r\n        }\r\n        else {\r\n            this.items.push(itemToSet);\r\n        }\r\n    }\r\n}\r\n","import { IItem } from '../item/item';\r\nimport { Select } from '../item/Select';\r\nimport { Count } from '../item/Count';\r\nimport { Activable } from '../item/Activable';\r\nimport { IConfiguration } from './base/Configuration';\r\nimport { Configuration } from './Configuration';\r\n\r\nexport class ConfigurationBuilder {\r\n    private _items: Array<IItem> = [];\r\n\r\n    private contructor() { }\r\n\r\n    public static create(): ConfigurationBuilder {\r\n        return new ConfigurationBuilder();\r\n    }\r\n    \r\n    public addSelect(id: string, betweenValues: Array<unknown>): ConfigurationBuilder {\r\n        this._items.push(new Select(id, betweenValues));\r\n        return this;\r\n    }\r\n\r\n    public addCount(id: string, from: number, to: number): ConfigurationBuilder {\r\n        this._items.push(new Count(id, from, to));\r\n        return this;\r\n    }\r\n\r\n    public addActivable(id: string): ConfigurationBuilder {\r\n        this._items.push(new Activable(id));\r\n        return this;\r\n    }\r\n\r\n    public addItem(item: IItem): ConfigurationBuilder {\r\n        this._items.push(item);\r\n        return this;\r\n    }\r\n\r\n    public addItems(items: Array<IItem>): ConfigurationBuilder {\r\n        items.forEach(item => this._items.push(item));\r\n        return this;\r\n    }\r\n\r\n    public build(): IConfiguration {\r\n        const config: IConfiguration = new Configuration();\r\n        config.items = this._items;\r\n        return config;\r\n    }\r\n}\r\n","import { UpdatableItem } from './updatable-item';\r\n\r\nexport class Activable extends UpdatableItem {\r\n    public type: string = 'Activable';\r\n    public get isActive(): boolean {\r\n        return this._isActive\r\n    }\r\n    public id: string;\r\n\r\n    private _isActive: boolean = false;\r\n\r\n    constructor(id: string) {\r\n        super();\r\n        this.id = id;\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._isActive = !this._isActive;\r\n        this._emitChange();\r\n    }\r\n\r\n    public setActive(isActive: boolean): void {\r\n        if (this._isActive !== isActive) {\r\n            this._isActive = isActive;\r\n            this._emitChange();\r\n        }\r\n    }\r\n}\r\n","import { IItem } from './Item';\r\nimport { Select } from \"./Select\";\r\nimport { UpdatableItem } from './updatable-item';\r\n\r\nexport class Count extends UpdatableItem {\r\n    public type: string = 'Count';\r\n    public id: string;\r\n\r\n    public get state(): number {\r\n        return this._select.state;\r\n    }\r\n\r\n    public set state(value: number) {\r\n        this._select.state = value;\r\n    }\r\n\r\n    private _select: Select<number>;\r\n\r\n    constructor(id: string, from: number, to: number) {\r\n        super();\r\n        this._select = new Select<number>(`${id}_internal_select`, this._createNumberList(from, to));\r\n        this._select.onUpdate.subscribe(() => this._emitChange());\r\n        this.id = id;\r\n    }\r\n\r\n    private _createNumberList(from: number, to: number): Array<number> {\r\n        const list: Array<number> = [];\r\n        for (let i = from; i <= to; i++) {\r\n            list.push(i);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n","import { IItem } from './Item';\r\nimport { UpdatableItem } from './updatable-item';\r\nexport class Select<TValue = unknown> extends UpdatableItem {\r\n    public type: string = 'Select';\r\n    public states: Array<TValue>;\r\n    public id: string;\r\n\r\n    public get state(): TValue {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: TValue) {\r\n        if (!this._statesMap.has(value)) {\r\n            throw new Error(`${value} is not an accepted state. Select state can be set only between ${this.states.join(', ')} values.`);\r\n        }\r\n\r\n        if (this._state !== value) {\r\n            this._state = value;\r\n            this._emitChange();\r\n        }\r\n    }\r\n\r\n    private _statesMap: Map<TValue, boolean>;\r\n\r\n    private _state: TValue;\r\n\r\n    constructor(id: string, states: Array<TValue>) {\r\n        super();\r\n        this.id = id;\r\n        this.states = states;\r\n\r\n        this._statesMap = states.reduce((tot: Map<TValue, boolean>, value: TValue) => {\r\n            tot.set(value, true);\r\n            return tot;\r\n        }, new Map<TValue, boolean>());\r\n\r\n        this.state = states[0];\r\n    }\r\n}\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { IItem } from './Item';\r\n\r\nexport abstract class UpdatableItem implements IItem {\r\n    public abstract id: string;\r\n    public abstract type: string;\r\n    public onUpdate: Observable<this>;\r\n\r\n    private _onUpdateEvent: Subject<this> = new Subject();\r\n\r\n    constructor() {\r\n        this.onUpdate = this._onUpdateEvent.asObservable();\r\n    }\r\n\r\n    protected _emitChange(): void {\r\n        this._onUpdateEvent.next(this);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}