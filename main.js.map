{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/alttpr-ui/alttpr-ui.module.ts","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.html","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.scss","webpack:///./src/app/alttpr-ui/dungeon-tile/dungeon-tile.component.ts","webpack:///./src/app/alttpr-ui/images/base/images-service.ts","webpack:///./src/app/alttpr-ui/images/json-images.ts","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.html","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.scss","webpack:///./src/app/alttpr-ui/multiplayer/multiplayer.component.ts","webpack:///./src/app/alttpr-ui/multiplayer/service/json-multiplayer.ts","webpack:///./src/app/alttpr-ui/multiplayer/service/multiplayer.ts","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.html","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.scss","webpack:///./src/app/alttpr-ui/singleplayer/singleplayer.component.ts","webpack:///./src/app/alttpr-ui/standard/standard.component.html","webpack:///./src/app/alttpr-ui/standard/standard.component.scss","webpack:///./src/app/alttpr-ui/standard/standard.component.ts","webpack:///./src/app/alttpr/ALTTPR-config-helper.ts","webpack:///./src/app/alttpr/ids/Dungeon.ts","webpack:///./src/app/alttpr/ids/DungeonEntranceItem.ts","webpack:///./src/app/alttpr/ids/DungeonReward.ts","webpack:///./src/app/alttpr/ids/Item.ts","webpack:///./src/app/alttpr/ids/SwordState.ts","webpack:///./src/app/alttpr/ids/Utils.ts","webpack:///./src/app/alttpr/tiles/dungeon-tile-parser.ts","webpack:///./src/app/alttpr/tiles/dungeon-tile.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configuration/base/configuration-fetcher.ts","webpack:///./src/app/configuration/json/configuration-json-fetcher.ts","webpack:///./src/app/configuration/json/parsers/activable-tile-parser.ts","webpack:///./src/app/configuration/json/parsers/count-tile-parser.ts","webpack:///./src/app/configuration/json/parsers/select-tile-parser.ts","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.html","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.scss","webpack:///./src/app/core-ui/activable-tile/activable-tile.component.ts","webpack:///./src/app/core-ui/core-ui.module.ts","webpack:///./src/app/core-ui/image-repository/image-repository.ts","webpack:///./src/app/core-ui/select-tile/select-tile.component.html","webpack:///./src/app/core-ui/select-tile/select-tile.component.scss","webpack:///./src/app/core-ui/select-tile/select-tile.component.ts","webpack:///./src/app/core/configuration/Configuration.ts","webpack:///./src/app/core/configuration/ConfigurationBuilder.ts","webpack:///./src/app/core/item/Activable.ts","webpack:///./src/app/core/item/Count.ts","webpack:///./src/app/core/item/Select.ts","webpack:///./src/app/core/item/updatable-item.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DungeonTileComponent } from './dungeon-tile/dungeon-tile.component';\nimport { StandardComponent } from './standard/standard.component';\nimport { CoreUiModule } from '../core-ui/core-ui.module';\nimport { ALTTPRConfiguration } from '../alttpr/ALTTPR-configuration';\nimport { IConfigurationFetcher } from '../configuration/base/configuration-fetcher';\nimport { ConfigurationJsonFetcher } from '../configuration/json/configuration-json-fetcher';\nimport { DungeonTileParser } from '../alttpr/tiles/dungeon-tile-parser';\nimport { HardcodedImages } from './images/hardcoded-images';\nimport { ImagesService } from './images/base/images-service';\nimport { JsonImages } from './images/json-images';\nimport { ImageRepository } from '../core-ui/image-repository/image-repository';\nimport { MultiplayerComponent } from './multiplayer/multiplayer.component';\nimport { SingleplayerComponent } from './singleplayer/singleplayer.component';\nimport { MultiplayerService } from './multiplayer/service/multiplayer';\nimport { HardcodedMultiplayerService } from './multiplayer/service/hardcoded-multiplayer';\nimport { JsonMultiplayerService } from './multiplayer/service/json-multiplayer';\n\n@NgModule({\n  declarations: [DungeonTileComponent, StandardComponent, MultiplayerComponent, SingleplayerComponent],\n  imports: [\n    CommonModule,\n    CoreUiModule\n  ],\n  exports: [DungeonTileComponent, SingleplayerComponent, MultiplayerComponent],\n  providers: [\n    {\n      provide: IConfigurationFetcher,\n      useFactory: () => {\n        const fetcher = new ConfigurationJsonFetcher('./assets/configuration/example.json');\n        fetcher.addParser(new DungeonTileParser());\n\n        return fetcher;\n      }\n    },\n    {\n      provide: ImagesService,\n      useFactory: (imageRepo: ImageRepository) => {\n        return new JsonImages(imageRepo, './assets/configuration/example.images.json');\n      },\n      deps: [ImageRepository]\n    },\n    {\n      provide: MultiplayerService,\n      useFactory: () => {\n        return new JsonMultiplayerService('./assets/configuration/example.multiplayer.json');\n      }\n    },\n    // { provide: IConfigurationFetcher, useClass: ALTTPRConfiguration },\n    // { provide: ImagesService, useClass: HardcodedImages },\n    // { provide: MultiplayerService, useClass: HardcodedMultiplayerService }\n  ]\n})\nexport class AlttprUiModule {\n  constructor(imagesService: ImagesService) {\n    imagesService.setImagesInRepository();\n  }\n}\n","module.exports = \"<div class=\\\"imageContainer\\\">\\n    <activable-tile\\n      class=\\\"dungeon\\\"\\n      [item]=\\\"item\\\"></activable-tile>\\n    <select-tile\\n      class=\\\"reward\\\"\\n      [item]=\\\"item.reward\\\"></select-tile>\\n    <select-tile\\n      *ngIf=\\\"item.block\\\"\\n      class=\\\"block\\\"\\n      [item]=\\\"item.block\\\"></select-tile>\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  position: relative; }\\n  .imageContainer .notFound,\\n  .imageContainer .unknown {\\n    -webkit-filter: grayscale(100%);\\n            filter: grayscale(100%); }\\n  .imageContainer .reward {\\n    z-index: 10;\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    width: 16px;\\n    height: 16px; }\\n  .imageContainer .block {\\n    z-index: 10;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width: 16px;\\n    height: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL2R1bmdlb24tdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGFsdHRwci11aVxcZHVuZ2Vvbi10aWxlXFxkdW5nZW9uLXRpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXO0VBQ1gsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixtQkFBa0IsRUF3QnJCO0VBNUJEOztJQVFRLGdDQUF1QjtZQUF2Qix3QkFBdUIsRUFDMUI7RUFUTDtJQVlRLFlBQVc7SUFDWCxtQkFBa0I7SUFDbEIsVUFBUztJQUNULFNBQVE7SUFDUixZQUFXO0lBQ1gsYUFBWSxFQUNmO0VBbEJMO0lBcUJRLFlBQVc7SUFDWCxtQkFBa0I7SUFDbEIsT0FBTTtJQUNOLFNBQVE7SUFDUixZQUFXO0lBQ1gsYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvYWx0dHByLXVpL2R1bmdlb24tdGlsZS9kdW5nZW9uLXRpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2VDb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgLm5vdEZvdW5kLFxyXG4gICAgLnVua25vd24ge1xyXG4gICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xyXG4gICAgfVxyXG5cclxuICAgIC5yZXdhcmQge1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IDE2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5ibG9jayB7XHJcbiAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICB3aWR0aDogMTZweDtcclxuICAgICAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, Input } from '@angular/core';\nimport { DungeonTile } from 'src/app/alttpr/tiles/dungeon-tile';\n\n@Component({\n  selector: 'dungeon-tile',\n  templateUrl: './dungeon-tile.component.html',\n  styleUrls: ['./dungeon-tile.component.scss']\n})\nexport class DungeonTileComponent {\n  @Input()\n  public item: DungeonTile;\n}\n","export abstract class ImagesService {\r\n  public abstract setImagesInRepository(): Promise<void>;\r\n}","import { SwordState } from 'src/app/alttpr/ids/SwordState';\r\nimport { DungeonReward } from 'src/app/alttpr/ids/DungeonReward';\r\nimport { DungeonEntranceItem } from 'src/app/alttpr/ids/DungeonEntranceItem';\r\nimport { ImageRepository } from 'src/app/core-ui/image-repository/image-repository';\r\nimport { Item } from 'src/app/alttpr/ids/Item';\r\nimport { Dungeon } from 'src/app/alttpr/ids/Dungeon';\r\nimport { Injectable } from '@angular/core';\r\nimport { ImagesService } from './base/images-service';\r\n\r\n@Injectable()\r\nexport class JsonImages implements ImagesService {\r\n  private _imageRepo: ImageRepository;\r\n  private _filename: string;\r\n\r\n  constructor(imageRepo: ImageRepository, filename: string) {\r\n    this._imageRepo = imageRepo;\r\n    this._filename = filename;\r\n  }\r\n\r\n  public async setImagesInRepository(): Promise<void> {\r\n    const images: { [key: string]: string } = await (await fetch(this._filename)).json();\r\n\r\n    Object.keys(images).forEach(id => {\r\n      this._imageRepo.addImage(id, images[id]);\r\n    });\r\n  }\r\n}","module.exports = \"<standard [config]=\\\"config1\\\"></standard>\\n<p>----------</p>\\n<standard [config]=\\\"config2\\\"></standard>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsdHRwci11aS9tdWx0aXBsYXllci9tdWx0aXBsYXllci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\nimport { DungeonReward } from 'src/app/alttpr/ids/DungeonReward';\nimport { Dungeon } from 'src/app/alttpr/ids/Dungeon';\nimport { DungeonTile } from 'src/app/alttpr/tiles/dungeon-tile';\nimport { Utils } from 'src/app/alttpr/ids/Utils';\nimport { Select } from 'src/app/core/item/Select';\nimport { MultiplayerService } from './service/multiplayer';\nimport { Activable } from 'src/app/core/item/Activable';\nimport { IItem } from 'src/app/core/item/Item';\n\ninterface Type<T> extends Function {\n  new (...args: any[]): T\n}\n\n@Component({\n  selector: 'multiplayer',\n  templateUrl: './multiplayer.component.html',\n  styleUrls: ['./multiplayer.component.scss']\n})\nexport class MultiplayerComponent {\n  public config1: IConfiguration;\n  public config2: IConfiguration;\n\n  private _configRepository: IConfigurationFetcher;\n  private _multiplayerService: MultiplayerService;\n\n  constructor(configuration: IConfigurationFetcher, multiplayerService: MultiplayerService) {\n    this._configRepository = configuration;\n    this._multiplayerService = multiplayerService;\n  }\n\n  public async ngOnInit() {\n    this.config1 = await this._configRepository.getConfig();\n    this.config2 = await this._configRepository.getConfig();\n\n    const commonSelects: Array<string> = await this._multiplayerService.getAllCommonSelects();\n    this._connectItemCategory(Select, \"Select\", commonSelects, MultiplayerComponent._setSelectState);\n\n    const commonActivables: Array<string> = await this._multiplayerService.getAllCommonActivables();\n    this._connectItemCategory(Activable, \"Activable\", commonActivables, MultiplayerComponent._setActivableState);\n  }\n\n  private _connectItemCategory<TItem extends IItem>(\n    category: Type<TItem>,\n    categoryName: string,\n    commons: Array<string>,\n    setFn: (source: TItem, target: TItem) => void\n  ): void {\n    commons.forEach(commonState => {\n      const itemConfig1 = this.config1.getItem(commonState);\n      const itemConfig2 = this.config2.getItem(commonState);\n\n      if (!(itemConfig1 instanceof category) || !(itemConfig2 instanceof category)) {\n        throw new Error(`${commonState} needs to be a ${categoryName} item`);\n      }\n\n      this._connectItems(itemConfig1, itemConfig2, setFn);\n    });\n  }\n\n  private _connectItems<TItem extends IItem>(item1: TItem, item2: TItem, setFn: (source: TItem, target: TItem) => void) {\n    item1.onUpdate.subscribe((source: TItem) => {\n      setFn(source, item2);\n    });\n\n    item2.onUpdate.subscribe((source: TItem) => {\n      setFn(source, item1);\n    });\n  }\n\n  private static _setSelectState(source: Select, target: Select): void {\n    target.state = source.state;\n  }\n\n  private static _setActivableState(source: Activable, target: Activable): void {\n    target.setActive(source.isActive);\n  }\n}\n","import { MultiplayerService } from './multiplayer';\r\n\r\ninterface MultiplayerSharedItems {\r\n  select: Array<string>;\r\n  activable: Array<string>;\r\n}\r\n\r\nexport class JsonMultiplayerService implements MultiplayerService {\r\n  private _filename: string;\r\n  private _sharedItems: MultiplayerSharedItems;\r\n\r\n  constructor(filename: string) {\r\n    this._filename = filename;\r\n  }\r\n\r\n  public async getAllCommonSelects(): Promise<Array<string>> {\r\n    const sharedItems: MultiplayerSharedItems = await this._fetchSharedItems();\r\n    return sharedItems.select || [];\r\n  }\r\n\r\n  public async getAllCommonActivables(): Promise<Array<string>> {\r\n    const sharedItems: MultiplayerSharedItems = await this._fetchSharedItems();\r\n    return sharedItems.activable || [];\r\n  }\r\n\r\n  private async _fetchSharedItems(): Promise<MultiplayerSharedItems> {\r\n    if (!this._sharedItems)\r\n      this._sharedItems = await (await fetch(this._filename)).json();\r\n    \r\n    return this._sharedItems;\r\n  }\r\n}","export abstract class MultiplayerService {\r\n  public abstract getAllCommonSelects(): Promise<Array<string>>;\r\n  public abstract getAllCommonActivables(): Promise<Array<string>>;\r\n}","module.exports = \"<standard [config]=\\\"config\\\"></standard>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsdHRwci11aS9zaW5nbGVwbGF5ZXIvc2luZ2xlcGxheWVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\n\n@Component({\n  selector: 'singleplayer',\n  templateUrl: './singleplayer.component.html',\n  styleUrls: ['./singleplayer.component.scss']\n})\nexport class SingleplayerComponent implements OnInit {\n  public config: IConfiguration;\n\n  private _configRepository: IConfigurationFetcher;\n\n  constructor(configuration: IConfigurationFetcher) {\n    this._configRepository = configuration;\n  }\n\n  public async ngOnInit() {\n    this.config = await this._configRepository.getConfig();\n  }\n}\n","module.exports = \"<ng-container *ngIf=\\\"config\\\">\\n  <activable-tile\\n    class=\\\"tile\\\"\\n    [item]=\\\"config.getItem(Item.Bow)\\\"></activable-tile>\\n  <activable-tile\\n    class=\\\"tile\\\"\\n    [item]=\\\"config.getItem(Item.BlueBoomerang)\\\"></activable-tile>\\n  <select-tile\\n    class=\\\"tile\\\"\\n    [item]=\\\"config.getItem(Item.Sword)\\\"></select-tile>\\n  <dungeon-tile\\n    class=\\\"tile\\\"\\n    [item]=\\\"config.getItem(Dungeon.EasternPalace)\\\"></dungeon-tile>\\n  <dungeon-tile\\n    class=\\\"tile\\\"\\n    [item]=\\\"config.getItem(Dungeon.MiseryMire)\\\"></dungeon-tile>\\n</ng-container>\"","module.exports = \".tile {\\n  width: 32px;\\n  height: 32px;\\n  max-width: 32px;\\n  max-height: 32px;\\n  background-color: #2b4e4e;\\n  overflow: hidden;\\n  margin: 1px;\\n  border-radius: 3px;\\n  display: inline-block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWx0dHByLXVpL3N0YW5kYXJkL0Q6XFxQcm9qZWN0c1xcVHJhY2tlckFMVFRQUi9zcmNcXGFwcFxcYWx0dHByLXVpXFxzdGFuZGFyZFxcc3RhbmRhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXO0VBQ1gsYUFBWTtFQUNaLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLDBCQUF5QjtFQUN6QixpQkFBZ0I7RUFDaEIsWUFBVztFQUNYLG1CQUFrQjtFQUNsQixzQkFBcUIsRUFDeEIiLCJmaWxlIjoic3JjL2FwcC9hbHR0cHItdWkvc3RhbmRhcmQvc3RhbmRhcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGlsZSB7XHJcbiAgICB3aWR0aDogMzJweDtcclxuICAgIGhlaWdodDogMzJweDtcclxuICAgIG1heC13aWR0aDogMzJweDtcclxuICAgIG1heC1oZWlnaHQ6IDMycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmI0ZTRlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIG1hcmdpbjogMXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59Il19 */\"","import { Component, Input } from '@angular/core';\nimport { IConfiguration } from 'src/app/core/configuration/base/Configuration';\nimport { Item } from 'src/app/alttpr/ids/Item';\nimport { Dungeon } from 'src/app/alttpr/ids/Dungeon';\nimport { SwordState } from 'src/app/alttpr/ids/SwordState';\nimport { Utils } from 'src/app/alttpr/ids/Utils';\nimport { IConfigurationFetcher } from 'src/app/configuration/base/configuration-fetcher';\n\n@Component({\n  selector: 'standard',\n  templateUrl: './standard.component.html',\n  styleUrls: ['./standard.component.scss']\n})\nexport class StandardComponent {\n  @Input()\n  public config: IConfiguration;\n\n  public Item: typeof Item = Item;\n  public Dungeon: typeof Dungeon = Dungeon;\n  public SwordState: typeof SwordState = SwordState;\n}","import { Select } from '../core/item/Select';\r\nimport { Utils } from './ids/Utils';\r\nimport { DungeonReward } from './ids/DungeonReward';\r\nimport { Dungeon } from './ids/Dungeon';\r\nimport { DungeonEntranceItem } from './ids/DungeonEntranceItem';\r\n\r\nexport class ALTTPConfigHelper {\r\n    public static createDungeonRewardSelect(dungeonId: Dungeon): Select {\r\n        return new Select(Utils.dungeonRewardId(dungeonId), [\r\n            DungeonReward.Unknown,\r\n            DungeonReward.Pendant,\r\n            DungeonReward.GreenPendant,\r\n            DungeonReward.Crystal,\r\n            DungeonReward.RedCrystal\r\n        ]);\r\n    }\r\n\r\n    public static createDungeonBlockSelect(dungeonId: Dungeon): Select {\r\n        return new Select(Utils.dungeonNeededItemId(dungeonId), [\r\n            DungeonEntranceItem.Unknown,\r\n            DungeonEntranceItem.Bombos,\r\n            DungeonEntranceItem.Ether,\r\n            DungeonEntranceItem.Quake\r\n        ]);\r\n    }\r\n}","export enum Dungeon {\r\n    EasternPalace = 'Dungeon_EasternPalace',\r\n    MiseryMire = 'Dungeon_MiseryMire'\r\n}\r\n","export enum DungeonEntranceItem {\r\n    Unknown = 'DungeonEntranceItem_?',\r\n    Bombos = 'DungeonEntranceItem_Bombos',\r\n    Ether = 'DungeonEntranceItem_Ether',\r\n    Quake = 'DungeonEntranceItem_Quake'\r\n}\r\n","export enum DungeonReward {\r\n    Unknown = 'DungeonReward_?',\r\n    Pendant = 'DungeonReward_Pendant',\r\n    GreenPendant = 'DungeonReward_GreenPendant',\r\n    Crystal = 'DungeonReward_Crystal',\r\n    RedCrystal = 'DungeonReward_RedCrystal'\r\n}\r\n","export enum Item {\r\n    Bow = 'Item_Bow',\r\n    SilverArrows = 'Item_SilverArrows',\r\n    BlueBoomerang = 'Item_BlueBoomerang',\r\n    RedBoomerang = 'Item_RedBoomerang',\r\n    Hookshot = 'Item_Hookshot',\r\n    Mushroom = 'Item_Mushroom',\r\n    Bottle = 'Item_Bottle',\r\n    Sword = 'Item_Sword'\r\n    // ...\r\n}\r\n","export enum SwordState {\r\n    NotFound = 'SwordState_NotFound',\r\n    Hero = 'SwordState_Hero',\r\n    Master = 'SwordState_Master',\r\n    Tempered = 'SwordState_Tempered',\r\n    Gold = 'SwordState_Gold'\r\n}\r\n","import { Dungeon } from './Dungeon';\r\n\r\nexport class Utils {\r\n    public static dungeonRewardId(dungeon: Dungeon): string {\r\n        return `${dungeon}_Reward`;\r\n    }\r\n    \r\n    public static dungeonNeededItemId(dungeon: Dungeon): string {\r\n        return `${dungeon}_EntranceNeededItem`;\r\n    }\r\n}","import { ITileParser } from \"../../configuration/json/parsers/base/tile-parser\";\r\nimport { IItem } from '../../core/item/Item';\r\nimport { Activable } from '../../core/item/Activable';\r\nimport { Select } from '../../core/item/Select';\r\nimport { DungeonTile } from './dungeon-tile';\r\nimport { Dungeon } from '../ids/Dungeon';\r\n\r\nexport class DungeonTileParser implements ITileParser {\r\n    public type: string = 'Dungeon';\r\n\r\n    public parse(config: { id: Dungeon; blocked: boolean; }): Array<IItem> {\r\n        const dungeonTile: DungeonTile = new DungeonTile(config.id);\r\n        const parsedItems: Array<IItem> = [dungeonTile, dungeonTile.reward];\r\n        \r\n        if (config.blocked){\r\n            dungeonTile.setBlocked();\r\n            parsedItems.push(dungeonTile.block);\r\n        }\r\n\r\n        return parsedItems;\r\n    }\r\n}","import { Activable } from 'src/app/core/item/Activable';\r\nimport { Select } from 'src/app/core/item/Select';\r\nimport { ALTTPConfigHelper } from '../ALTTPR-config-helper';\r\nimport { Dungeon } from '../ids/Dungeon';\r\n\r\nexport class DungeonTile extends Activable {\r\n    public reward: Select;\r\n    public block?: Select;\r\n\r\n    constructor(id: Dungeon) {\r\n        super(id);\r\n        this.reward = ALTTPConfigHelper.createDungeonRewardSelect(id);\r\n        this.reward.onUpdate.subscribe(() => this._emitChange());\r\n    }\r\n\r\n    public setBlocked(): void {\r\n        this.block = ALTTPConfigHelper.createDungeonBlockSelect(this.id as Dungeon);\r\n        this.block.onUpdate.subscribe(() => this._emitChange());\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<multiplayer></multiplayer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AlttprUiModule } from './alttpr-ui/alttpr-ui.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AlttprUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { IConfiguration } from '../../core/configuration/base/Configuration';\r\n\r\nexport abstract class IConfigurationFetcher {\r\n    public abstract getConfig(): Promise<IConfiguration>;\r\n}","import { IConfigurationFetcher } from '../base/configuration-fetcher';\r\nimport { IConfiguration } from '../../core/configuration/base/Configuration';\r\nimport { ConfigurationBuilder } from '../../core/configuration/ConfigurationBuilder';\r\nimport { ITileParser } from './parsers/base/tile-parser';\r\nimport { ActivableTileParser } from './parsers/activable-tile-parser';\r\nimport { SelectTileParser } from './parsers/select-tile-parser';\r\nimport { CountTileParser } from './parsers/count-tile-parser';\r\n\r\nexport class ConfigurationJsonFetcher implements IConfigurationFetcher {\r\n    private _filename: string;\r\n    private _parsersMap: { [key: string]: ITileParser } = {\r\n        Activable: new ActivableTileParser(),\r\n        Count: new CountTileParser(),\r\n        Select: new SelectTileParser()\r\n    }\r\n\r\n    constructor(filename: string) {\r\n        this._filename = filename;\r\n    }\r\n\r\n    public addParser(parser: ITileParser): void {\r\n        this._parsersMap[parser.type] = parser;\r\n    }\r\n\r\n    public async getConfig(): Promise<IConfiguration> {\r\n        const json: { tiles: Array<any>; } = await (await fetch(this._filename)).json();\r\n        const builder = new ConfigurationBuilder();\r\n        \r\n        json.tiles.forEach((item) => {\r\n            const parser: ITileParser = this._findParserFor(item.type);\r\n            builder.addItems(parser.parse(item));\r\n        });\r\n\r\n        return builder.build();\r\n    }\r\n\r\n    private _findParserFor(type: string): ITileParser {\r\n        if (!this._parsersMap[type])\r\n            throw new Error(`Parser not found for tile type ${type}`);\r\n\r\n        return this._parsersMap[type];\r\n    }\r\n}\r\n","import { Activable } from '../../../core/item/Activable';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class ActivableTileParser implements ITileParser {\r\n    public type: string = 'Activable';\r\n    public parse(config: {\r\n        id: string;\r\n    }): Array<Activable> {\r\n        return [new Activable(config.id)];\r\n    }\r\n}\r\n","import { Count } from '../../../core/item/Count';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class CountTileParser implements ITileParser {\r\n    public type: string = 'Count';\r\n    public parse(config: {\r\n        id: string;\r\n        from: number;\r\n        to: number;\r\n    }): Array<Count> {\r\n        return [new Count(config.id, config.from, config.to)];\r\n    }\r\n}\r\n","import { Select } from '../../../core/item/Select';\r\nimport { ITileParser } from './base/tile-parser';\r\n\r\nexport class SelectTileParser implements ITileParser {\r\n    public type: string = 'Select';\r\n    public parse(config: {\r\n        id: string;\r\n        states: Array<string>;\r\n    }): Array<Select> {\r\n        return [new Select(config.id, config.states)];\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"imageContainer\\\" (click)=\\\"item.toggle()\\\" (contextmenu)=\\\"item.toggle(); $event.preventDefault()\\\">\\r\\n    <img [ngClass]=\\\"{ 'notFound': !(state$ | async) }\\\" [src]=\\\"image\\\">\\r\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%; }\\n  .imageContainer img {\\n    width: 100%;\\n    height: 100%; }\\n  .imageContainer .notFound {\\n    -webkit-filter: grayscale(100%);\\n            filter: grayscale(100%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS11aS9hY3RpdmFibGUtdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGNvcmUtdWlcXGFjdGl2YWJsZS10aWxlXFxhY3RpdmFibGUtdGlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVc7RUFDWCxhQUFZLEVBVWY7RUFaRDtJQUtRLFlBQVc7SUFDWCxhQUFZLEVBQ2Y7RUFQTDtJQVVRLGdDQUF1QjtZQUF2Qix3QkFBdUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9jb3JlLXVpL2FjdGl2YWJsZS10aWxlL2FjdGl2YWJsZS10aWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltYWdlQ29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubm90Rm91bmQge1xyXG4gICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Activable } from 'src/app/core/item/Activable';\nimport { ImageRepository } from '../image-repository/image-repository';\nimport { Observable, of, concat } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'activable-tile',\n  templateUrl: './activable-tile.component.html',\n  styleUrls: ['./activable-tile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActivableTileComponent {\n  @Input()\n  public item: Activable;\n  \n  public image: string;\n  public state$: Observable<boolean>;\n\n  private _imageRepo: ImageRepository;\n\n  constructor(imageRepo: ImageRepository) {\n    this._imageRepo = imageRepo;\n  }\n\n  public ngOnInit(): void {\n    this.image = this._imageRepo.getImageForId(this.item.id);\n    this.state$ = concat(\n      of(this.item.isActive),\n      this.item.onUpdate.pipe(map(item => item.isActive))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivableTileComponent } from './activable-tile/activable-tile.component';\nimport { SelectTileComponent } from './select-tile/select-tile.component';\nimport { ImageRepository } from './image-repository/image-repository';\n\n@NgModule({\n  declarations: [ActivableTileComponent, SelectTileComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ActivableTileComponent, SelectTileComponent],\n  providers: [ImageRepository]\n})\nexport class CoreUiModule { }\n","export class ImageRepository {\r\n  private _imagesMap: { [key: string]: string } = {};\r\n\r\n  public addImage(id: string, url: string): void {\r\n    this._imagesMap[id] = url;\r\n  }\r\n\r\n  public addImages(images: { [key: string]: string }): void {\r\n    Object.assign(this._imagesMap, images);\r\n  }\r\n\r\n  public getImageForId(id: string): string {\r\n    if (!this._imagesMap[id])\r\n      console.warn(\"Image not found for id\", id);\r\n\r\n    return this._imagesMap[id];\r\n  }\r\n}","module.exports = \"<div class=\\\"imageContainer\\\" (click)=\\\"next()\\\" (contextmenu)=\\\"previous(); $event.preventDefault()\\\">\\n    <ng-container *ngIf=\\\"state$ | async; let state\\\">\\n        <img [ngClass]=\\\"{ 'notFound': !isFound(state) }\\\" [src]=\\\"images[state]\\\">\\n    </ng-container>\\n</div>\"","module.exports = \".imageContainer {\\n  width: 100%;\\n  height: 100%;\\n  text-align: center; }\\n  .imageContainer img {\\n    width: 100%;\\n    height: 100%; }\\n  .imageContainer .notFound {\\n    -webkit-filter: grayscale(100%);\\n            filter: grayscale(100%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS11aS9zZWxlY3QtdGlsZS9EOlxcUHJvamVjdHNcXFRyYWNrZXJBTFRUUFIvc3JjXFxhcHBcXGNvcmUtdWlcXHNlbGVjdC10aWxlXFxzZWxlY3QtdGlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVc7RUFDWCxhQUFZO0VBQ1osbUJBQWtCLEVBVXJCO0VBYkQ7SUFNUSxZQUFXO0lBQ1gsYUFBWSxFQUNmO0VBUkw7SUFXUSxnQ0FBdUI7WUFBdkIsd0JBQXVCLEVBQzFCIiwiZmlsZSI6InNyYy9hcHAvY29yZS11aS9zZWxlY3QtdGlsZS9zZWxlY3QtdGlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWFnZUNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAubm90Rm91bmQge1xyXG4gICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Select } from 'src/app/core/item/Select';\nimport { ImageRepository } from '../image-repository/image-repository';\nimport { concat, of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'select-tile',\n  templateUrl: './select-tile.component.html',\n  styleUrls: ['./select-tile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectTileComponent {\n  @Input()\n  public item: Select;\n  \n  public images: { [id: string]: string };\n  public state$: Observable<unknown>;\n\n  private _imageRepo: ImageRepository;\n\n  constructor(imageRepo: ImageRepository) {\n    this._imageRepo = imageRepo;\n  }\n\n  public ngOnInit(): void {\n    this.images = this._getStatesImages();\n    this.state$ = concat(\n      of(this.item.state),\n      this.item.onUpdate.pipe(map(item => item.state))\n    );\n  }\n\n  private _getStatesImages(): { [id: string]: string } {\n    return this.item.states.reduce<{ [id: string]: string }>((tot, state: string) => {\n      tot[state] = this._imageRepo.getImageForId(state);\n      return tot;\n    }, {});\n  }\n\n  public isFound(state: string): boolean {\n    return this.item.states[0] !== state;\n  }\n\n  public next(): void {\n    const index: number = this.item.states.indexOf(this.item.state);\n    const length: number = this.item.states.length;\n\n    this.item.state = this.item.states[Math.min((index + 1), length - 1)];\n  }\n\n  public previous(): void {\n    const index: number = this.item.states.indexOf(this.item.state);\n\n    this.item.state = this.item.states[Math.max((index - 1), 0)];\n  }\n}\n","import { IItem } from '../item/item';\r\nimport { IConfiguration } from './base/Configuration';\r\n\r\nexport class Configuration implements IConfiguration {\r\n    public items: Array<IItem>;\r\n    public getItem(id: string): IItem {\r\n        const item: IItem = this.items.find(item => item.id === id);\r\n        if (!item) {\r\n            throw new Error(\"Configuration item not found with id \" + id);\r\n        }\r\n        return item;\r\n    }\r\n    public setItem(itemToSet: IItem): void {\r\n        const index: number = this.items.findIndex(item => item.id === itemToSet.id);\r\n        if (index > -1) {\r\n            this.items.splice(index, 1, itemToSet);\r\n        }\r\n        else {\r\n            this.items.push(itemToSet);\r\n        }\r\n    }\r\n}\r\n","import { IItem } from '../item/item';\r\nimport { Select } from '../item/Select';\r\nimport { Count } from '../item/Count';\r\nimport { Activable } from '../item/Activable';\r\nimport { IConfiguration } from './base/Configuration';\r\nimport { Configuration } from './Configuration';\r\n\r\nexport class ConfigurationBuilder {\r\n    private _items: Array<IItem> = [];\r\n\r\n    private contructor() { }\r\n\r\n    public static create(): ConfigurationBuilder {\r\n        return new ConfigurationBuilder();\r\n    }\r\n    \r\n    public addSelect(id: string, betweenValues: Array<unknown>): ConfigurationBuilder {\r\n        this._items.push(new Select(id, betweenValues));\r\n        return this;\r\n    }\r\n\r\n    public addCount(id: string, from: number, to: number): ConfigurationBuilder {\r\n        this._items.push(new Count(id, from, to));\r\n        return this;\r\n    }\r\n\r\n    public addActivable(id: string): ConfigurationBuilder {\r\n        this._items.push(new Activable(id));\r\n        return this;\r\n    }\r\n\r\n    public addItem(item: IItem): ConfigurationBuilder {\r\n        this._items.push(item);\r\n        return this;\r\n    }\r\n\r\n    public addItems(items: Array<IItem>): ConfigurationBuilder {\r\n        items.forEach(item => this._items.push(item));\r\n        return this;\r\n    }\r\n\r\n    public build(): IConfiguration {\r\n        const config: IConfiguration = new Configuration();\r\n        config.items = this._items;\r\n        return config;\r\n    }\r\n}\r\n","import { UpdatableItem } from './updatable-item';\r\n\r\nexport class Activable extends UpdatableItem {\r\n    public get isActive(): boolean {\r\n        return this._isActive\r\n    }\r\n    public id: string;\r\n\r\n    private _isActive: boolean = false;\r\n\r\n    constructor(id: string) {\r\n        super();\r\n        this.id = id;\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._isActive = !this._isActive;\r\n        this._emitChange();\r\n    }\r\n\r\n    public setActive(isActive: boolean): void {\r\n        if (this._isActive !== isActive) {\r\n            this._isActive = isActive;\r\n            this._emitChange();\r\n        }\r\n    }\r\n}\r\n","import { IItem } from './Item';\r\nimport { Select } from \"./Select\";\r\nimport { UpdatableItem } from './updatable-item';\r\n\r\nexport class Count extends UpdatableItem {\r\n    public id: string;\r\n\r\n    public get state(): number {\r\n        return this._select.state;\r\n    }\r\n\r\n    public set state(value: number) {\r\n        this._select.state = value;\r\n    }\r\n\r\n    private _select: Select<number>;\r\n\r\n    constructor(id: string, from: number, to: number) {\r\n        super();\r\n        this._select = new Select<number>(`${id}_internal_select`, this._createNumberList(from, to));\r\n        this._select.onUpdate.subscribe(() => this._emitChange());\r\n        this.id = id;\r\n    }\r\n\r\n    private _createNumberList(from: number, to: number): Array<number> {\r\n        const list: Array<number> = [];\r\n        for (let i = from; i <= to; i++) {\r\n            list.push(i);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n","import { IItem } from './Item';\r\nimport { UpdatableItem } from './updatable-item';\r\nexport class Select<TValue = unknown> extends UpdatableItem {\r\n    public states: Array<TValue>;\r\n    public id: string;\r\n\r\n    public get state(): TValue {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: TValue) {\r\n        if (!this._statesMap.has(value)) {\r\n            throw new Error(`${value} is not an accepted state. Select state can be set only between ${this.states.join(', ')} values.`);\r\n        }\r\n\r\n        if (this._state !== value) {\r\n            this._state = value;\r\n            this._emitChange();\r\n        }\r\n    }\r\n\r\n    private _statesMap: Map<TValue, boolean>;\r\n\r\n    private _state: TValue;\r\n\r\n    constructor(id: string, states: Array<TValue>) {\r\n        super();\r\n        this.id = id;\r\n        this.states = states;\r\n\r\n        this._statesMap = states.reduce((tot: Map<TValue, boolean>, value: TValue) => {\r\n            tot.set(value, true);\r\n            return tot;\r\n        }, new Map<TValue, boolean>());\r\n\r\n        this.state = states[0];\r\n    }\r\n}\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { IItem } from './Item';\r\n\r\nexport abstract class UpdatableItem implements IItem {\r\n    public abstract id: string;\r\n    public onUpdate: Observable<this>;\r\n\r\n    private _onUpdateEvent: Subject<this> = new Subject();\r\n\r\n    constructor() {\r\n        this.onUpdate = this._onUpdateEvent.asObservable();\r\n    }\r\n\r\n    protected _emitChange(): void {\r\n        this._onUpdateEvent.next(this);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}